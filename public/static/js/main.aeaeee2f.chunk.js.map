{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/capitalize.js","helpers/fetch.js","actions/ui.js","actions/auth.js","components/atoms/BtnModal.jsx","components/molecules/LoginForm.jsx","components/organism/LoginModal.jsx","helpers/formSchema.js","actions/posts.js","components/molecules/NewPostForm.jsx","components/organism/NewPostModal.jsx","components/molecules/SignupForm.jsx","components/organism/RegisterModal.jsx","components/templates/NavBarPpal.jsx","components/organism/HeaderLogin.jsx","components/organism/HeaderLogout.jsx","helpers/howLongMoment.js","components/organism/PostCard.jsx","components/organism/PostsContainer.jsx","components/pages/HomeScreen.jsx","components/molecules/UpdatePostForm.jsx","components/organism/UpdatePostModal.jsx","components/molecules/OwnerPostActions.jsx","components/pages/PostScreen.jsx","components/molecules/UserSocial.jsx","components/organism/UserCard.jsx","components/organism/UserPosts.jsx","components/pages/UserScreen.jsx","components/molecules/SearchForm.jsx","components/pages/SearchScreen.jsx","components/atoms/BtnOptions.jsx","components/molecules/NavOwnerPost.jsx","components/molecules/NavOwnerUser.jsx","components/templates/NavActionsPosts.jsx","components/pages/UserEditScreen.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","AppMyBlog.jsx","index.js"],"names":["types","initialState","user","uid","name","surname","email","img_avatar","facebookUrl","twitterUrl","githubUrl","linkedinUrl","logged","checking","modalRegisterOpen","modalLoginOpen","modalNewPostOpen","modalUpdatePostOpen","rootReducer","combineReducers","ui","state","action","type","auth","payload","composeEnhacers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","capitalize","string","stringArr","split","map","str","charAt","toUpperCase","slice","join","dotenv","config","baseUrl","process","fetchNotToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","fetchFormData","redirect","uiOpenLoginModal","uiCloseLoginModal","uiOpenRegisterModal","uiCloseRegisterModal","uiOpenNewPostModal","uiCloseNewPostModal","uiOpenUpdatePostModal","uiCloseUpdatePostModal","userLogout","history","dispatch","a","Swal","fire","title","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","clear","push","isDenied","deleteUser","userId","resp","json","ok","msg","error","toLocaleString","register","login","BtnModal","text","handleClick","className","onClick","LoginForm","changeModal","useForm","handleSubmit","errors","formState","useDispatch","onSubmit","setItem","Date","getTime","img","placeholder","required","pattern","value","message","password","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","LoginModal","useSelector","isOpen","onRequestClose","style","overlayClassName","FILE_SIZE","SUPPORTED_FORMATS","schemaPost","yup","shape","min","max","subtitle","image","nullable","test","length","size","includes","schemaPostUpdate","schemaUserUpdate","oldPassword","match","newPassword","deletePost","postId","console","log","NewPostForm","useState","article","articleData","setArticleData","resolver","yupResolver","watch","imageName","useHistory","formdata","FormData","append","_id","createNewPost","htmlFor","hidden","id","outputFormat","init","height","width","resize","plugins","toolbar","onEditorChange","parseEditorData","textareaName","e","preventDefault","NewPostModal","modalClose","SignupForm","useRef","current","maxLength","minLength","validate","password_repeat","RegisterModal","NavBarPpal","to","src","alt","HeaderLogin","HeaderLogout","moment","locale","howLong","date","diff","startOf","fromNow","format","PostCard","post","createdAt","author","textDate","PostsContainer","endPoint","loading","posts","setPosts","useEffect","catch","HomeScreen","UpdatePostForm","initialValues","reset","updatePost","defaultValue","UpdatePostModal","OwnerPostActions","PostScreen","params","idPost","datePost","setPost","p","ownerOptionsActive","dangerouslySetInnerHTML","__html","UserSocial","href","target","rel","UserCard","UserPosts","UserScreen","dataUser","setDataUser","idUser","SearchForm","setPostsSearch","searchPosts","query","parseResult","err","total_posts","search","SearchScreen","postsSearch","BtnOptions","btnType","textBtn","color","fontSize","NavOwnerPost","NavOwnerUser","NavActions","dataLocation","setDataLocation","location","pathname","activeNavPosition","exact","UserEditScreen","imageFile","setImg","URL","createObjectURL","formData","formDataImg","updateUserImg","msgPassword","updateUser","PrivateRoute","props","isAuthenticated","AppRouter","path","component","AppMyBlog","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aeaeee2f.chunk.js","sourcesContent":["export const types = {\r\n    //ui\r\n    uiOpenModalRegister: '[ui] OPEN_MODAL_REGISTER',\r\n    uiCloseModalRegister: '[ui] CLOSE_MODAL_REGISTER',\r\n    uiOpenModalLogin: '[ui] OPEN_MODAL_LOGIN',\r\n    uiCloseModalLogin: '[ui] CLOSE_MODAL_LOGIN',\r\n    uiOpenModalNewPost: '[ui] OPEN_MODAL_NEW_POST',\r\n    uiCloseModalNewPost: '[ui] CLOSE_MODAL_NEW_POST',\r\n    uiOpenModalUpdatePost: '[ui] OPEN_MODAL_UPDATE_POST',\r\n    uiCloseModalUpdatePost: '[ui] CLOSE_MODAL_UPDATE_POST',\r\n    //auth\r\n    authChecking: '[auth] CHECKING_LOGIN_STATE',\r\n    authCheckingFinish: '[auth] FINISH_CHECKING_LOGIN_STATE',\r\n    authStartLogin: '[auth] START_LOGIN',\r\n    authLogin: '[auth] LOGIN',\r\n    authStartRegister: '[auth] START_REGISTER',\r\n    authStartTokenRenew: '[auth] START_TOKEN_RENEW',\r\n    authLogout: '[auth] LOGOUT',\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    user: {\r\n        uid: null,\r\n        name: null,\r\n        surname: null,\r\n        email: null,\r\n        img_avatar: null,\r\n        facebookUrl: null,\r\n        twitterUrl: null,\r\n        githubUrl: null,\r\n        linkedinUrl: null\r\n    },\r\n    logged: false,\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authStartRegister:\r\n            return {\r\n                user: action.payload,\r\n                logged: true,\r\n                checking: false\r\n            };\r\n        case types.authLogin:\r\n            return {\r\n                user: action.payload,\r\n                logged: true,\r\n                checking: false\r\n            };\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...initialState,\r\n                checking: false\r\n            };\r\n        case types.authLogout:\r\n            return {\r\n                ...initialState,\r\n                checking: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalRegisterOpen: false,\r\n    modalLoginOpen: false,\r\n    modalNewPostOpen: false,\r\n    modalUpdatePostOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModalRegister:\r\n            return {\r\n                ...state,\r\n                modalRegisterOpen: true\r\n            };\r\n        case types.uiCloseModalRegister:\r\n            return {\r\n                ...state,\r\n                modalRegisterOpen: false\r\n            };\r\n        case types.uiOpenModalLogin:\r\n            return {\r\n                ...state,\r\n                modalLoginOpen: true\r\n            };\r\n        case types.uiCloseModalLogin:\r\n            return {\r\n                ...state,\r\n                modalLoginOpen: false\r\n            };\r\n        case types.uiOpenModalNewPost:\r\n            return {\r\n                ...state,\r\n                modalNewPostOpen: true\r\n            };\r\n        case types.uiCloseModalNewPost:\r\n            return {\r\n                ...state,\r\n                modalNewPostOpen: false\r\n            };\r\n        case types.uiOpenModalUpdatePost:\r\n            return {\r\n                ...state,\r\n                modalUpdatePostOpen: true\r\n            };\r\n        case types.uiCloseModalUpdatePost:\r\n            return {\r\n                ...state,\r\n                modalUpdatePostOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\n\r\nconst composeEnhacers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhacers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","\r\n\r\nexport const capitalize = (string = '') => {\r\n    let stringArr = string.split(' ');\r\n    stringArr = stringArr.map(str => str.charAt(0).toUpperCase() + str.slice(1));\r\n    return stringArr.join(' ');\r\n};","import dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URI;\r\n\r\nexport const fetchNotToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Authorization\": token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchFormData = (endpoint, data, method = 'POST') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    return fetch(url, {\r\n        method,\r\n        headers: {\r\n            \"Authorization\": token\r\n        },\r\n        body: data,\r\n        redirect: 'follow'\r\n    });\r\n};\r\n\r\n\r\n","import { types } from '../types/types';\r\n\r\n\r\n\r\nexport const uiOpenLoginModal = () => ({ type: types.uiOpenModalLogin });\r\nexport const uiCloseLoginModal = () => ({ type: types.uiCloseModalLogin });\r\n\r\nexport const uiOpenRegisterModal = () => ({ type: types.uiOpenModalRegister });\r\nexport const uiCloseRegisterModal = () => ({ type: types.uiCloseModalRegister });\r\n\r\nexport const uiOpenNewPostModal = () => ({ type: types.uiOpenModalNewPost });\r\nexport const uiCloseNewPostModal = () => ({ type: types.uiCloseModalNewPost });\r\n\r\nexport const uiOpenUpdatePostModal = () => ({ type: types.uiOpenModalUpdatePost });\r\nexport const uiCloseUpdatePostModal = () => ({ type: types.uiCloseModalUpdatePost });","import Swal from 'sweetalert2';\r\nimport { capitalize } from '../helpers/capitalize';\r\nimport { fetchFormData, fetchNotToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { uiCloseLoginModal, uiCloseRegisterModal } from './ui';\r\n\r\n\r\n\r\nexport const startRegister = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchNotToken('auth/signup', user, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (resp.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init', new Date().getTime());\r\n\r\n            const { email, name, surname, uid, img } = body.user;\r\n            dispatch(register({\r\n                email,\r\n                name,\r\n                surname,\r\n                uid,\r\n                img\r\n            }));\r\n            Swal.fire(\r\n                'Bienvenido!',\r\n                `${capitalize(`${name} ${surname}`)}, ya formas parte de MyBlog!`,\r\n                'success'\r\n            );\r\n            dispatch(uiCloseRegisterModal())\r\n        } else {\r\n            Swal.fire(\r\n                'Oops...',\r\n                body.error.toLocaleString(),\r\n                'error'\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const startLogin = (user) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchNotToken('auth/signin', user, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (resp.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init', new Date().getTime());\r\n\r\n            const { email, name, surname, uid, img } = body.user;\r\n            dispatch(login({\r\n                email,\r\n                name,\r\n                surname,\r\n                uid,\r\n                img\r\n            }));\r\n            Swal.fire(\r\n                'Bienvenido!',\r\n                capitalize(`${name} ${surname}`),\r\n                'success'\r\n            );\r\n            dispatch(uiCloseLoginModal());\r\n        } else {\r\n            Swal.fire(\r\n                'Oops...',\r\n                body.error.toLocaleString(),\r\n                'error'\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken('auth/refresh');\r\n        const body = await resp.json();\r\n\r\n        if (resp.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init', new Date().getTime());\r\n\r\n            dispatch(login(body.user));\r\n        } else {\r\n            dispatch({ type: types.authCheckingFinish });\r\n        };\r\n    };\r\n};\r\n\r\nexport const userLogout = (history) => {\r\n    return async (dispatch) => {\r\n        Swal.fire({\r\n            title: 'Confirme para desconectarse',\r\n            showDenyButton: true,\r\n            confirmButtonText: `Yes`,\r\n            denyButtonText: `No`\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                // Clean storage, state, redirect to home.\r\n                localStorage.clear('token');\r\n                localStorage.clear('token-init');\r\n\r\n                dispatch({ type: types.authLogout });\r\n                history.push(\"/\");\r\n            } else if (result.isDenied) {\r\n                return\r\n            };\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateUser = (data, history, userId) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken(`users/${userId}`, data, 'PUT');\r\n        const body = await resp.json();\r\n\r\n        if (resp.ok) {\r\n            Swal.fire(\r\n                `${body.msg}`,\r\n                `${body.msgPassword}`,\r\n                'success'\r\n            );\r\n            dispatch(register(body.data));\r\n            history.push(`/users/${userId}`);\r\n        } else {\r\n            Swal.fire(\r\n                'Oops...',\r\n                body.error.toLocaleString(),\r\n                'error'\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\n\r\nexport const updateUserImg = (data, history, userId) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchFormData(`uploads/users/${userId}`, data, 'PUT');\r\n        const body = await resp.json();\r\n\r\n        if (resp.ok) {\r\n            dispatch(register(body.data));\r\n            history.push(`/users/${userId}`);\r\n        } else {\r\n            console.log(body.error)\r\n        };\r\n    };\r\n};\r\n\r\n\r\nexport const deleteUser = (history, userId) => {\r\n    return async (dispatch) => {\r\n        Swal.fire({\r\n            title: '¿Desea Eliminar el Usuario?',\r\n            showDenyButton: true,\r\n            confirmButtonText: `Yes`,\r\n            denyButtonText: `No`\r\n\r\n        }).then(async (result) => {\r\n\r\n            if (result.isConfirmed) {\r\n                const resp = await fetchWithToken(`users/${userId}`, {}, 'DELETE');\r\n                const body = await resp.json();\r\n\r\n                if (resp.ok) {\r\n                    Swal.fire(\r\n                        'Usuario Eliminado!',\r\n                        body.msg,\r\n                        'success'\r\n                    );\r\n                    // Clean storage, state, redirect to home.\r\n                    localStorage.clear('token');\r\n                    localStorage.clear('token-init');\r\n\r\n                    dispatch({ type: types.authLogout });\r\n                    history.push(\"/\");\r\n                } else {\r\n                    Swal.fire(\r\n                        'Oops...',\r\n                        body.error.toLocaleString(),\r\n                        'error'\r\n                    );\r\n                };\r\n            } else if (result.isDenied) {\r\n                return\r\n            };\r\n        });\r\n\r\n    };\r\n};\r\n\r\n\r\n\r\nconst register = (user) => ({\r\n    type: types.authStartRegister,\r\n    payload: user\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst BtnModal = ({ text, handleClick }) => {\r\n    return (\r\n        <button\r\n            className='btn_modal'\r\n            onClick={handleClick}\r\n        >{text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default BtnModal;\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\n\r\nconst LoginForm = ({ changeModal }) => {\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    const onSubmit = (data) => {   \r\n        dispatch(startLogin(data));\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <div className=\"form-inner\">\r\n                <form className=\"login\"  onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"field\">\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            {...register(\"email\", {\r\n                                required: 'Email es requerido', \r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,// validation email\r\n                                    message: \"Introduzca email valido.\",\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            {...register('password', {\r\n                                required: 'Pasword es requerido',\r\n                                pattern: {\r\n                                  value: /^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$/,\r\n                                  message: \"Password: min 8 caracteres, 1 numero\"\r\n                                }\r\n                            })} \r\n                        />\r\n                        {errors.password && <p className=\"error\">{errors.password.message}</p>}\r\n                    </div>\r\n                    <div className=\"field btn\">\r\n                        <div className=\"btn-layer\"></div>\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Login\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"signup-link\">\r\n                        <p>Not a member? <span onClick={changeModal}>Signup now</span></p> \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseLoginModal, uiOpenRegisterModal } from '../../actions/ui';\r\nimport LoginForm from '../molecules/LoginForm';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst LoginModal = () => {\r\n    const { modalLoginOpen } = useSelector(state => state.ui);\r\n\r\n    const dispatch = useDispatch();\r\n    const modalClose = () => {\r\n        dispatch(uiCloseLoginModal());\r\n    };\r\n\r\n    const changeModal = () => {\r\n        dispatch(uiCloseLoginModal());\r\n        dispatch(uiOpenRegisterModal());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalLoginOpen}\r\n                onRequestClose={modalClose}\r\n                style={customStyles}\r\n                overlayClassName='modal-fondo'\r\n            >\r\n                <div className=\"modal\">\r\n                    <div className=\"title-login\">\r\n                        <h3>Login</h3>\r\n                        <hr/>\r\n                    </div>\r\n                    <LoginForm changeModal={changeModal}/>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default LoginModal;\r\n","import * as yup from 'yup';\r\n\r\n\r\nconst FILE_SIZE = \"500000\";\r\nconst FILE_SIZE_AVATAR = \"500000\"\r\nconst SUPPORTED_FORMATS = [\"image/jpeg\", \"image/png\"];\r\n\r\n\r\nexport const schemaPost = yup.object().shape({\r\n    title: yup.string()\r\n        .required('Titulo es requerido.')\r\n        .min(2, 'Minimo 2 caracteres')\r\n        .max(50, 'Maximo 50 caracteres'),\r\n    subtitle: yup.string()\r\n        .required('Subtitulo es requerido.')\r\n        .min(2, 'Minimo 2 caracteres')\r\n        .max(150, 'Maximo 150 caracteres'),\r\n    image: yup\r\n        .mixed()\r\n        .nullable()\r\n        .test(\"FILE_SIZE\", \"Imagen es requerida\", (value) => {\r\n            return !value || value.length > 0;\r\n        })\r\n        .test(\"FILE_SIZE\", \"Imagen demasiado grande.\", (value) => {\r\n            return (\r\n                !value || (value && value.length > 0 && value[0].size <= FILE_SIZE)\r\n            );\r\n        })\r\n        .test(\r\n            \"FILE_FORMAT\", \"Formato no soportado (jpeg, png)\",\r\n            (value) =>\r\n                !value ||\r\n                (value &&\r\n                    value.length > 0 &&\r\n                    SUPPORTED_FORMATS.includes(value[0].type))\r\n        ),\r\n});\r\n\r\nexport const schemaPostUpdate = yup.object().shape({\r\n    title: yup.string()\r\n        .required('Titulo es requerido.')\r\n        .min(2, 'Minimo 2 caracteres')\r\n        .max(50, 'Maximo 50 caracteres'),\r\n    subtitle: yup.string()\r\n        .required('Subtitulo es requerido.')\r\n        .min(2, 'Minimo 2 caracteres')\r\n        .max(150, 'Maximo 150 caracteres'),\r\n    image: yup\r\n        .mixed()\r\n        .test(\"FILE_SIZE\", \"Imagen demasiado grande.\", (value) => {\r\n            if (!value || !value.length) return true\r\n            return value[0].size <= FILE_SIZE\r\n\r\n        })\r\n        .test(\"FILE_FORMAT\", \"Formato no soportado (jpeg, png)\", (value) => {\r\n            if (!value || !value.length) return true\r\n            return SUPPORTED_FORMATS.includes(value[0].type)\r\n        }),\r\n});\r\n\r\n\r\nexport const schemaUserUpdate = yup.object().shape({\r\n    name: yup.string()\r\n        .required('Nombre es requerido.')\r\n        .min(2, 'Minimo 2 caracteres')\r\n        .max(50, 'Maximo 50 caracteres'),\r\n    surname: yup.string()\r\n        .required('Apellido es requerido.')\r\n        .min(2, 'Minimo 2 caracteres')\r\n        .max(150, 'Maximo 150 caracteres'),\r\n    email: yup.string()\r\n        .email()\r\n        .required('Email es requerido.')\r\n        .min(2, 'Minimo 2 caracteres')\r\n        .max(150, 'Maximo 100 caracteres'),\r\n    // urls social media\r\n    githubUrl: yup.string()\r\n        .url('No es una url valida'),\r\n    facebookUrl: yup.string()\r\n        .url('No es una url valida'),\r\n    twitterUrl: yup.string()\r\n        .url('No es una url valida'),\r\n    linkedinUrl: yup.string()\r\n        .url('No es una url valida'),\r\n    //passwords\r\n    oldPassword: yup.string()\r\n        .test(\"PASS_EMPTY\", 'Password: min 8 caracteres, 1 numero', (value) => {\r\n            if (!value || !value.length) return true\r\n            return value.match(/^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$/)\r\n        }),\r\n    newPassword: yup.string()\r\n        .test(\"PASS_EMPTY\", 'Password: min 8 caracteres, 1 numero', (value) => {\r\n            if (!value || !value.length) return true\r\n            return value.match(/^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$/)\r\n        }),\r\n    // img usuario.\r\n    image: yup\r\n        .mixed()\r\n        .test(\"FILE_SIZE\", \"Imagen demasiado grande.\", (value) => {\r\n            if (!value || !value.length) return true\r\n            return value[0].size <= FILE_SIZE_AVATAR\r\n        })\r\n        .test(\"FILE_FORMAT\", \"Formato no soportado (jpeg, png)\", (value) => {\r\n            if (!value || !value.length) return true\r\n            return SUPPORTED_FORMATS.includes(value[0].type)\r\n        }),\r\n});","//import { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { fetchFormData, fetchWithToken } from '../helpers/fetch';\r\nimport { uiCloseNewPostModal, uiCloseUpdatePostModal } from './ui';\r\n\r\n\r\nexport const createNewPost = (data, history) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchFormData('posts', data, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (resp.ok) {\r\n            Swal.fire(\r\n                'Post creado!',\r\n                `Ya puede acceder al post`,\r\n                'success'\r\n            );\r\n            dispatch(uiCloseNewPostModal());\r\n            history.push(`/posts/${body.data._id}`);\r\n        } else {\r\n            Swal.fire(\r\n                'Oops...',\r\n                body.error.toLocaleString(),\r\n                'error'\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\nexport const updatePost = (data, history, postId) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchFormData(`posts/${postId}`, data, 'PUT');\r\n        const body = await resp.json();\r\n\r\n        if (resp.ok) {\r\n            Swal.fire(\r\n                '!Post actualizado!',\r\n                `Ya puede acceder al post \r\n                Recargue la pagina`,\r\n                'success'\r\n            );\r\n            dispatch(uiCloseUpdatePostModal());\r\n            history.push(`/posts/${body.data._id}`);\r\n        } else {\r\n            Swal.fire(\r\n                'Oops...',\r\n                body.error.toLocaleString(),\r\n                'error'\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\nexport const deletePost = (history, postId) => {\r\n    return async () => {\r\n        Swal.fire({\r\n            title: 'Confirme para Eliminar Post',\r\n            showDenyButton: true,\r\n            confirmButtonText: `Yes`,\r\n            denyButtonText: `No`\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                const resp = await fetchWithToken(`posts/${postId}`, {}, 'DELETE');\r\n                const body = await resp.json();\r\n                console.log(body)\r\n                if (resp.ok) {\r\n                    Swal.fire(\r\n                        'Post eliminado',\r\n                        `El post fue eliminado stisfactoriamente`,\r\n                        'success'\r\n                    );\r\n                    history.push(`/`);\r\n                } else {\r\n                    Swal.fire(\r\n                        'Oops...',\r\n                        body.error.toLocaleString(),\r\n                        'error'\r\n                    );\r\n                };\r\n                history.push(\"/\");\r\n            } else if (result.isDenied) {\r\n                return\r\n            };\r\n        });\r\n\r\n    };\r\n};\r\n\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { schemaPost } from '../../helpers/formSchema';\r\nimport { createNewPost } from '../../actions/posts';\r\n\r\n\r\n\r\n\r\nconst NewPostForm = () => {\r\n    const [articleData, setArticleData] = useState({ article: '' });\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schemaPost),\r\n    });\r\n\r\n    const imageName = watch(\"image\", []);\r\n\r\n    const parseEditorData = (content) => {\r\n        setArticleData({\r\n            article: content\r\n        })\r\n    };\r\n\r\n    const clearForm = (e) => {\r\n        e.preventDefault();\r\n        setArticleData({\r\n            article: '',\r\n        });\r\n    };\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const saveBlog = (data) => {\r\n        const formdata = new FormData();\r\n        formdata.append(\"title\", data.title);\r\n        formdata.append(\"subtitle\", data.subtitle);\r\n        formdata.append(\"article\", articleData.article);\r\n        formdata.append(\"archivo\", data.image[0]);\r\n\r\n        dispatch(createNewPost(formdata, history));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                className=\"new-post-form\"\r\n                onSubmit={handleSubmit(saveBlog)}\r\n            >\r\n                <div className='field'>\r\n                    <input\r\n                        className=\"form-input \"\r\n                        type='text'\r\n                        placeholder='Title'\r\n                        {...register(\"title\")}\r\n                    />\r\n                </div>\r\n                {errors.title && <p className=\"error\">{errors.title.message}</p>}\r\n                <div className='field'>\r\n                    <input\r\n                        className=\"form-input \"\r\n                        type='text'\r\n                        placeholder='Subtitle'\r\n                        {...register(\"subtitle\")}\r\n                    />\r\n                </div>\r\n                {errors.subtitle && <p className=\"error\">{errors.subtitle.message}</p>}\r\n                <div className='field-box'>\r\n                    <label htmlFor='imageUrl' className=\"input-file\">Image Post</label>\r\n                    <p className=\"text-input-file\">\r\n                        {(!imageName[0]) ? 'Choose your image...' : imageName[0].name}\r\n                    </p>\r\n                    <input\r\n                        hidden\r\n                        type='file'\r\n                        id='imageUrl'\r\n                        {...register('image')}\r\n                    />\r\n                </div>\r\n                {errors.image && <p className=\"error\">{errors.image.message}</p>}\r\n                <div className='box_editor'>\r\n                    <Editor\r\n                        outputFormat='html'\r\n                        init={{\r\n                            height: 300,\r\n                            width: 820,\r\n                            resize: false,\r\n                            plugins: 'code link image imagetools',\r\n                            toolbar: 'undo redo | formatselect |forecolor backcolor | bold italic underline | alignleft aligncenter alignright | bullist numlist | link image tinydrive | code'\r\n                        }}\r\n                        onEditorChange={(content) =>\r\n                            parseEditorData(content)\r\n                        }\r\n                        value={articleData.article}\r\n                        textareaName=\"content\"\r\n                    />\r\n                </div>\r\n                <div className='btn-box'>\r\n                    <button\r\n                        className=\"button btn_call\"\r\n                        id=\"save-button\"\r\n                    >Save\r\n                    </button>\r\n                    <button\r\n                        className=\"button btn_call\"\r\n                        id=\"clear-button\"\r\n                        onClick={clearForm}\r\n                    >Clean\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewPostForm;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseNewPostModal } from '../../actions/ui';\r\nimport NewPostForm from '../molecules/NewPostForm';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst NewPostModal = () => {\r\n    const { modalNewPostOpen } = useSelector(state => state.ui);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const modalClose = () => {\r\n        dispatch(uiCloseNewPostModal());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalNewPostOpen}\r\n                onRequestClose={modalClose}\r\n                style={customStyles}\r\n                overlayClassName='modal-fondo'\r\n            >\r\n                <div className=\"modal-newpost\">\r\n                    <div className=\"title-login\">\r\n                        <h3>Create New Blog Post</h3>\r\n                        <hr/>\r\n                    </div>\r\n                    <NewPostForm modalClose={modalClose}/>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default NewPostModal;","import React, { useRef } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { startRegister } from '../../actions/auth';\r\n\r\n\r\n\r\nconst SignupForm = ({ changeModal, modalClose }) => {\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    \r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const onSubmit = (data) => {    \r\n        dispatch(startRegister(data));\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <div className=\"form-inner\">\r\n                <form className=\"signup-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"signup-field\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                            {...register(\"name\", {\r\n                                required: 'Nombre es requerido.', \r\n                                maxLength: 80,\r\n                                minLength: {\r\n                                    value: 2,\r\n                                    message: \"Nombre necesita min 2 letras.\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.name && <p className=\"error\">{errors.name.message}</p>}\r\n                    </div>\r\n                    <div className=\"signup-field\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Last Name\"\r\n                            {...register(\"surname\", {\r\n                                required: 'Apellido es requerido.', \r\n                                maxLength: 100,\r\n                                minLength: {\r\n                                    value: 2,\r\n                                    message: \"Apellido necesita min 8 letras.\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.surname && <p className=\"error\">{errors.surname.message}</p>}\r\n                    </div>\r\n                    <div className=\"signup-field\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            {...register(\"email\", {\r\n                                required: 'Email es requerido', \r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,// validation email\r\n                                    message: \"Introduzca email valido.\",\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n                    </div>\r\n                    <div className=\"signup-field\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            \r\n                            {...register('password', {\r\n                                required: 'Pasword es requerido',\r\n                                pattern: {\r\n                                  value: /^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$/,\r\n                                  message: \"Password: min 8 caracteres, 1 numero\"\r\n                                }\r\n                            })} \r\n                        />\r\n                        {errors.password && <p className=\"error\">{errors.password.message}</p>}\r\n                    </div>\r\n                    <div className=\"signup-field\">\r\n                        <input \r\n                            type=\"password\" \r\n                            placeholder=\"Confirm password\" \r\n\r\n                            {...register('password_repeat', {\r\n                                required: 'Pasword es requerido',\r\n                                validate: value =>\r\n                                  value === password.current || \"Paswords no son iguales\"\r\n                              })}\r\n                        />\r\n                        {errors.password_repeat && <p className=\"error\">{errors.password_repeat.message}</p>}\r\n                    </div>\r\n                    <div className=\"field btn\">\r\n                        <div className=\"btn-layer\"></div>\r\n                        <input\r\n                            type=\"submit\" \r\n                            value=\"Signup\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"signup-link\">\r\n                        <p> You are a member? <span onClick={changeModal} >Login now</span></p> \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseRegisterModal, uiOpenLoginModal } from '../../actions/ui';\r\nimport SignupForm from '../molecules/SignupForm';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst RegisterModal = () => {\r\n    const { modalRegisterOpen } = useSelector(state => state.ui);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const modalClose = () => {\r\n        dispatch(uiCloseRegisterModal());\r\n    };\r\n\r\n    const changeModal = () => {\r\n        dispatch(uiCloseRegisterModal());\r\n        dispatch(uiOpenLoginModal());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalRegisterOpen}\r\n                onRequestClose={modalClose}\r\n                style={customStyles}\r\n                overlayClassName='modal-fondo'\r\n            >\r\n                <div className=\"modal\">\r\n                    <div className=\"title-login\">\r\n                        <h3>Signup</h3>\r\n                        <hr/>\r\n                        <p className='text_login'>Create your account it´s free.</p>\r\n                    </div>\r\n                    <SignupForm changeModal={changeModal} modalClose={modalClose}/>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default RegisterModal;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { userLogout } from '../../actions/auth';\r\nimport { uiOpenLoginModal, uiOpenNewPostModal, uiOpenRegisterModal } from '../../actions/ui';\r\nimport BtnModal from '../atoms/BtnModal';\r\nimport LoginModal from '../organism/LoginModal';\r\nimport NewPostModal from '../organism/NewPostModal';\r\nimport RegisterModal from '../organism/RegisterModal';\r\n\r\nconst NavBarPpal = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { logged, user } = useSelector(state => state.auth);\r\n\r\n    const openLoginModal = () => {\r\n        dispatch(uiOpenLoginModal());\r\n    };\r\n    const openRegisterModal = () => {\r\n        dispatch(uiOpenRegisterModal());\r\n    };\r\n    const openNewPostModal = () => {\r\n        dispatch(uiOpenNewPostModal());\r\n    };\r\n    const handleClick = () => {\r\n        dispatch(userLogout(history));\r\n    };\r\n\r\n    return (\r\n        <div className='navbar_ppal'>\r\n            <Link to='/' >\r\n                <div className='img_logo'></div>\r\n            </Link>\r\n            {\r\n                (!logged) &&\r\n                <div className=\"navbar_auth\">\r\n                    <ul className=\"navbar_list\">\r\n                        <li className=\"navbar_item\">\r\n                            <BtnModal text='Login' handleClick={openLoginModal} />\r\n                        </li>\r\n                        <li className=\"navbar_item\">\r\n                            <BtnModal text='Signup' handleClick={openRegisterModal} />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n            {\r\n                (logged) &&\r\n                <div className=\"navbar_auth\">\r\n                    <ul className=\"navbar_list\">\r\n                        <li className=\"navbar_item\">\r\n                            <BtnModal text='New Post' handleClick={openNewPostModal} />\r\n                        </li>\r\n                        <li className=\"navbar_item\">\r\n                            <BtnModal text='Logout' handleClick={handleClick} />\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"navbar_user_img\">\r\n                        <Link to={`/users/${user.uid}`} >\r\n                            <img src={user.img} className='user_img' alt={user.name} />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"modals\" hidden>\r\n                <RegisterModal />\r\n                <LoginModal />\r\n                <NewPostModal />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBarPpal;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenNewPostModal } from '../../actions/ui';\r\nimport { capitalize } from '../../helpers/capitalize';\r\n\r\n\r\nconst HeaderLogin = () => {\r\n    const { user } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    \r\n    const postClick = () => {\r\n        dispatch(uiOpenNewPostModal());\r\n    };\r\n\r\n    return (\r\n        <div className=\"home_header\">\r\n            <div className=\"box_header\">\r\n                <h1 className=\"header_title\">\r\n                    {capitalize(`Bienvenido ${ user.name} ${user.surname}`)}! <br/>\r\n                    Postea y comparte con la comunidad<br/>\r\n                    Aprende compartiendo...\r\n                </h1>\r\n                <button \r\n                    className='btn_call'\r\n                    onClick={postClick}\r\n                >New Post\r\n                </button>\r\n            </div>  \r\n        </div>  \r\n    );\r\n};\r\n\r\nexport default HeaderLogin;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenLoginModal, uiOpenRegisterModal } from '../../actions/ui';\r\n\r\n\r\n\r\nconst HeaderLogout = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const loginClick = () => {\r\n        dispatch(uiOpenLoginModal());\r\n    };\r\n    const signupClick = () => {\r\n        dispatch(uiOpenRegisterModal());\r\n    };\r\n\r\n    return (\r\n        <div className=\"home_header\">\r\n            <div className=\"box_header\">\r\n                <h1 className=\"header_title\">\r\n                    Bienvenido a MyBlog! <br/>\r\n                    Registrate y crea con la comunidad <br/>\r\n                    Aprende compartiendo...\r\n                </h1>\r\n                <button \r\n                    className='btn_call'\r\n                    onClick={loginClick}\r\n                >Login\r\n                </button>\r\n                <button \r\n                    className='btn_call'\r\n                    onClick={signupClick}\r\n                >Signup\r\n                </button>\r\n            </div>  \r\n        </div>  \r\n    );\r\n};\r\n\r\nexport default HeaderLogout;\r\n","import moment from 'moment';\r\nimport 'moment/locale/es'\r\nmoment.locale('es');\r\n\r\n\r\nexport const howLong = (date) => {\r\n    const diff = moment().diff(date, 'seconds');\r\n    if (diff < 86400) {\r\n        return moment(date).startOf('minutes').fromNow();\r\n    } else {\r\n        return moment(date).format('DD/MM/YYYY')\r\n    };\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { capitalize } from '../../helpers/capitalize';\r\nimport { howLong } from '../../helpers/howLongMoment';\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n    const { title, subtitle, img, _id, createdAt, author } = post;\r\n    const textDate = howLong(createdAt);\r\n\r\n    return (\r\n        <div className=\"post_card\">\r\n            <div className=\"card_img_box\">\r\n                <img className=\"card_img\" src={img} alt=\"post\" />\r\n            </div>\r\n            <div className=\"card_header\">\r\n                <h3 className=\"card_title\">{title}</h3>\r\n                <h4 className=\"card_subtitle\">{subtitle}</h4>\r\n            </div>\r\n            <div className=\"author_comp\">\r\n                <img src={author.img} className='author_img' alt=\"author\" />\r\n                <Link to={`/users/${author.uid}`} >\r\n                    <p className=\"author_name\">{capitalize(`${author.name} ${author.surname}`)}</p>\r\n                </Link>\r\n                <p className=\"date_post\">{textDate}</p>\r\n            </div>\r\n            <p className=\"post_date\"></p>\r\n            <div className=\"card_call\">\r\n                <Link to={`/posts/${_id}`} >\r\n                    <button className=\"card_call_btn btn_call\">Leer</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { fetchNotToken } from '../../helpers/fetch';\r\nimport PostCard from './PostCard';\r\n\r\nconst PostsContainer = () => {\r\n    const endPoint = 'posts?page=1'\r\n    const [posts, setPosts] = useState({\r\n        error: null,\r\n        loading: true,\r\n        data: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchNotToken(endPoint)\r\n            .then(resp => resp.json())\r\n            .then(resp => {\r\n                setPosts({\r\n                    error: null,\r\n                    loading: false,\r\n                    data: resp.data.posts\r\n                })\r\n            })\r\n            .catch(error => {\r\n                setPosts({\r\n                    data: null,\r\n                    loading: false,\r\n                    error\r\n                })\r\n            })\r\n    }, [endPoint])\r\n\r\n    return (\r\n        <div className=\"posts_container\">\r\n            <div className=\"posts_cards\">\r\n                <h2 className=\"posts_title result_text\">\r\n                    Posts de la comunidad\r\n                </h2>\r\n                {\r\n                    posts.data && posts.data.map(post => (\r\n                        <PostCard\r\n                            key={post._id}\r\n                            post={post}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostsContainer;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport HeaderLogin from '../organism/HeaderLogin';\r\nimport HeaderLogout from '../organism/HeaderLogout';\r\nimport PostsContainer from '../organism/PostsContainer';\r\n\r\n\r\nconst HomeScreen = () => {\r\n    const { logged } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <div className='homeScreen'>\r\n            {\r\n                !logged ? <HeaderLogout /> : <HeaderLogin />\r\n            }\r\n            <div className=\"home_body\">\r\n                <PostsContainer />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { schemaPostUpdate } from '../../helpers/formSchema';\r\nimport { updatePost } from '../../actions/posts';\r\n\r\n\r\n\r\n\r\nconst UpdatePostForm = ({ post }) => {\r\n\r\n    const initialValues = {\r\n        title: post.data.title,\r\n        subtitle: post.data.subtitle,\r\n        image: [],\r\n        article: post.data.article\r\n    }\r\n\r\n    const [articleData, setArticleData] = useState({ article: initialValues.article });\r\n\r\n    const { register, handleSubmit, watch, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schemaPostUpdate)\r\n    });\r\n\r\n    const imageName = watch(\"image\", []);\r\n\r\n    const parseEditorData = (content) => {\r\n        setArticleData({\r\n            article: content\r\n        })\r\n    };\r\n\r\n    const initialForm = (e) => {\r\n        e.preventDefault();\r\n        setArticleData({ article: initialValues.article });\r\n        reset();\r\n    };\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const saveBlog = (data) => {\r\n        const formdata = new FormData();\r\n        formdata.append(\"title\", data.title);\r\n        formdata.append(\"subtitle\", data.subtitle);\r\n        formdata.append(\"article\", articleData.article);\r\n\r\n        if (data.image || data.image.length) {\r\n            formdata.append(\"archivo\", data.image[0]);\r\n        }\r\n        dispatch(updatePost(formdata, history, post.data._id));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                className=\"new-post-form\"\r\n                onSubmit={handleSubmit(saveBlog)}\r\n            >\r\n                <div className='field'>\r\n                    <input\r\n                        className=\"form-input \"\r\n                        type='text'\r\n                        defaultValue={initialValues.title}\r\n                        placeholder='Title'\r\n                        {...register(\"title\")}\r\n                    />\r\n                </div>\r\n                {errors.title && <p className=\"error\">{errors.title.message}</p>}\r\n                <div className='field'>\r\n                    <input\r\n                        className=\"form-input \"\r\n                        type='text'\r\n                        defaultValue={initialValues.subtitle}\r\n                        placeholder='Subtitle'\r\n                        {...register(\"subtitle\")}\r\n                    />\r\n                </div>\r\n                {errors.subtitle && <p className=\"error\">{errors.subtitle.message}</p>}\r\n                <div className='field-box'>\r\n                    <label htmlFor='imageUrl' className=\"input-file\">Image Post</label>\r\n                    <p className=\"text-input-file\">\r\n                        {(!imageName[0]) ? 'Choose your image...' : imageName[0].name}\r\n                    </p>\r\n                    <input\r\n                        hidden\r\n                        type='file'\r\n                        defaultValue={[]}\r\n                        id='imageUrl'\r\n                        {...register('image')}\r\n                    />\r\n                </div>\r\n                {errors.image && <p className=\"error\">{errors.image.message}</p>}\r\n                <div className='box_editor'>\r\n                    <Editor\r\n                        outputFormat='html'\r\n                        init={{\r\n                            height: 300,\r\n                            width: 820,\r\n                            resize: false,\r\n                            plugins: 'code link image imagetools',\r\n                            toolbar: 'undo redo | formatselect |forecolor backcolor | bold italic underline | alignleft aligncenter alignright | bullist numlist | link image tinydrive | code'\r\n                        }}\r\n                        onEditorChange={(content) =>\r\n                            parseEditorData(content)\r\n                        }\r\n                        value={articleData.article}\r\n                        textareaName=\"content\"\r\n                    />\r\n                </div>\r\n                <div className='btn-box'>\r\n                    <button\r\n                        className=\"button btn_call\"\r\n                        id=\"save-button\"\r\n                    >Edit\r\n                    </button>\r\n                    <button\r\n                        className=\"button btn_call\"\r\n                        id=\"clear-button\"\r\n                        onClick={initialForm}\r\n                    >Reset\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdatePostForm;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseUpdatePostModal } from '../../actions/ui';\r\nimport UpdatePostForm from '../molecules/UpdatePostForm';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst UpdatePostModal = ({ post }) => {\r\n    const { modalUpdatePostOpen } = useSelector(state => state.ui);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const modalClose = () => {\r\n        dispatch(uiCloseUpdatePostModal());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalUpdatePostOpen}\r\n                onRequestClose={modalClose}\r\n                style={customStyles}\r\n                overlayClassName='modal-fondo'\r\n            >\r\n                <div className=\"modal-newpost\">\r\n                    <div className=\"title-login\">\r\n                        <h3>Update Blog Post</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <UpdatePostForm modalClose={modalClose} post={post} />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default UpdatePostModal;","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { deletePost } from '../../actions/posts';\r\nimport { uiOpenUpdatePostModal } from '../../actions/ui';\r\nimport UpdatePostModal from '../organism/UpdatePostModal';\r\n\r\nconst OwnerPostActions = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const clickUpdatePost = () => {\r\n        dispatch(uiOpenUpdatePostModal());\r\n    };\r\n\r\n    const clickDeletePost = () => {\r\n        dispatch(deletePost(history, post.data._id));\r\n    };\r\n\r\n    return (\r\n        <div className=\"owner_actions\">\r\n            <button\r\n                className=\"btn_update_post\"\r\n                onClick={clickUpdatePost}\r\n            ><i className=\"bi bi-pencil-fill\"></i></button>\r\n            <UpdatePostModal post={post} />\r\n            <button\r\n                className=\"btn_delete_post\"\r\n                onClick={clickDeletePost}\r\n            ><i className=\"bi bi-trash-fill\"></i></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OwnerPostActions;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { capitalize } from '../../helpers/capitalize';\r\nimport { fetchNotToken } from '../../helpers/fetch';\r\nimport { howLong } from '../../helpers/howLongMoment';\r\nimport OwnerPostActions from '../molecules/OwnerPostActions';\r\n\r\n\r\n\r\n\r\nconst PostScreen = ({ match }) => {\r\n    const endPoint = `posts/${match.params.idPost}`;\r\n    const { user } = useSelector(state => state.auth);\r\n\r\n    const [post, setPost] = useState({\r\n        error: null,\r\n        loading: true,\r\n        data: null,\r\n        datePost: null\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        fetchNotToken(endPoint)\r\n            .then(resp => resp.json())\r\n            .then(resp => {\r\n                setPost({\r\n                    error: null,\r\n                    loading: false,\r\n                    data: resp.data,\r\n                    datePost: howLong(resp.data.createdAt)\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                setPost(p => ({\r\n                    ...p,\r\n                    loading: false,\r\n                    error\r\n                }))\r\n            })\r\n\r\n    }, [endPoint]);\r\n\r\n    const ownerOptionsActive = () => {\r\n        if (post.data.author.uid === user.uid) {\r\n            return <OwnerPostActions post={post} />\r\n        };\r\n        return;\r\n    };\r\n\r\n    return (\r\n        <div className=\"post_screen\">\r\n            {\r\n                post.data &&\r\n                <div className=\"post_container\">\r\n                    <div className=\"post_header_img\">\r\n                        <img src={post.data.img} className=\"screen_img\" alt=\"post\" />\r\n                    </div>\r\n                    <div className=\"post_header\">\r\n                        <div className=\"author_post_screen\">\r\n                            <img src={post.data.author.img} className='author_img' alt=\"author\" />\r\n                            <Link to={`/users/${post.data.author.uid}`} >\r\n                                <p className=\"author_name\">{capitalize(`${post.data.author.name} ${post.data.author.surname}`)}</p>\r\n                            </Link>\r\n                            <p className=\"date_post\">{post.datePost}</p>\r\n                            {\r\n                                ownerOptionsActive()\r\n                            }\r\n                        </div>\r\n                        <div className=\"titles_box\">\r\n                            <h1 className=\"post_title\">{post.data.title}</h1>\r\n                            <h3 className=\"post_subtitle\">{post.data.subtitle}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"post_article\">\r\n                        <div dangerouslySetInnerHTML={{ __html: post.data.article }} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostScreen;\r\n","import React from 'react';\r\n\r\n\r\nconst UserSocial = ({ user }) => {\r\n\r\n    const SearchUrlgitHub = () => {\r\n        if (user.githubUrl) return user.githubUrl;\r\n        return 'https://github.com/';\r\n    };\r\n    const SearchUrlfacebook = () => {\r\n        if (user.facebookUrl) return user.facebookUrl;\r\n        return 'https://www.facebook.com/';\r\n    };\r\n    const SearchUrltwitter = () => {\r\n        if (user.twitterUrl) return user.twitterUrl;\r\n        return 'https://twitter.com/?lang=es';\r\n    };\r\n    const SearchUrllinkedin = () => {\r\n        if (user.linkedinUrl) return user.linkedinUrl;\r\n        return 'https://www.linkedin.com/';\r\n    };\r\n\r\n    return (\r\n        <div className=\"user_social_urls\">\r\n            <a href={SearchUrlgitHub()} target='_blank' rel='noreferrer'>\r\n                <i className=\"bi bi-github\"></i>\r\n            </a>\r\n            <a href={SearchUrlfacebook()} target='_blank' rel='noreferrer'>\r\n                <i className=\"bi bi-facebook\"></i>\r\n            </a>\r\n            <a href={SearchUrltwitter()} target='_blank' rel='noreferrer'>\r\n                <i className=\"bi bi-twitter\"></i>\r\n            </a>\r\n            <a href={SearchUrllinkedin()} target='_blank' rel='noreferrer'>\r\n                <i className=\"bi bi-linkedin\"></i>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSocial;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { capitalize } from '../../helpers/capitalize';\r\nimport UserSocial from '../molecules/UserSocial';\r\n\r\nconst UserCard = ({ author }) => {\r\n    const { user } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <div className=\"box_header box_user_header\">\r\n            <div className=\"user_card_box\">\r\n                <img src={author.img} className='user_img' alt={author.name} />\r\n                <p className=\"user_name\">{capitalize(`${author.name} ${author.surname}`)}</p>\r\n                <UserSocial user={author} />\r\n                {\r\n                    (user.uid === author.uid) &&\r\n                    <Link to='/edit-user' >\r\n                        <button className='btn_edit_user'>Editar Perfil</button>\r\n                    </Link>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport PostCard from './PostCard';\r\n\r\nconst UserPosts = ({ posts }) => {\r\n    return (\r\n        <div className=\"posts_container user_posts\">\r\n            <div className=\"posts_cards\">\r\n                <h2 className=\" result_text\">\r\n                    Ultimos posts\r\n                </h2>\r\n                {\r\n                    posts.map(post => (\r\n                        <PostCard\r\n                            key={post._id}\r\n                            post={post}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPosts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { fetchNotToken } from '../../helpers/fetch';\r\nimport UserCard from '../organism/UserCard';\r\nimport UserPosts from '../organism/UserPosts';\r\n\r\n\r\nconst UserScreen = ({ match }) => {\r\n\r\n    const [dataUser, setDataUser] = useState({\r\n        data: null,\r\n    });\r\n\r\n    const endPoint = `posts?author=${match.params.idUser}&page=1`;\r\n\r\n    useEffect(() => {\r\n        fetchNotToken(endPoint)\r\n            .then(resp => resp.json())\r\n            .then(resp => {\r\n                setDataUser({\r\n                    data: resp.data\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, [endPoint]);\r\n\r\n\r\n    return (\r\n        <div className=\"user_screen\">\r\n            <div className=\" user_header home_header\">\r\n                {\r\n                    (dataUser.data) && <UserCard author={dataUser.data.author} />\r\n                }\r\n            </div>\r\n            {\r\n                (dataUser.data) && <UserPosts posts={dataUser.data.posts} />\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default UserScreen;\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Swal from 'sweetalert2';\r\nimport { fetchNotToken } from '../../helpers/fetch';\r\n\r\n\r\nconst SearchForm = ({ setPostsSearch }) => {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        searchPosts(data.search);\r\n    };\r\n\r\n    const searchPosts = (query) => {\r\n        const endPoint = `posts?search=${query}&page=1`\r\n        fetchNotToken(endPoint)\r\n            .then(resp => resp.json())\r\n            .then(resp => {\r\n                let result = parseResult(resp.data)\r\n                setPostsSearch({\r\n                    posts: resp.data.posts,\r\n                    result\r\n                })\r\n            })\r\n            .catch(err => {\r\n                Swal.fire(\r\n                    'Oops...',\r\n                    err.error.toLocaleString(),\r\n                    'error'\r\n                );\r\n            });\r\n    };\r\n\r\n\r\n    const parseResult = (data) => {\r\n        if (!data.posts.length) {\r\n            return `No se encuentran resultados para \"${data.query}\"`;\r\n        } else {\r\n            return `Se encontraron ${data.total_posts} post que incluyan \"${data.query}\"`\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container_form_search container_form_edit\">\r\n            <form className=\"edit_user_form\" onSubmit={handleSubmit(onSubmit)} >\r\n                <div className=\"search_field edit_user_field\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search..\"\r\n                        {...register('search')}\r\n                    />\r\n                    <button className=\"btn_search\" type=\"submit\"><i className=\"bi bi-search\"></i></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState } from 'react';\r\nimport SearchForm from '../molecules/SearchForm';\r\nimport PostCard from '../organism/PostCard';\r\n\r\nconst SearchScreen = () => {\r\n    const [postsSearch, setPostsSearch] = useState({\r\n        posts: [],\r\n        result: 'Busque sus posts favoritos...'\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"search_screen\">\r\n            <div className=\"search_header home_header\">\r\n                <div className=\"box_header\">\r\n                    <h1 className=\"header_title \">\r\n                        Busca tus posts favoritos por titulo\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n            <SearchForm setPostsSearch={setPostsSearch} />\r\n            <div className=\"container_posts_search posts_cards\">\r\n                <h3 className='result_text'>{postsSearch.result}</h3>\r\n                {\r\n                    postsSearch.posts.map(post => (\r\n                        <PostCard\r\n                            key={post._id}\r\n                            post={post}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchScreen;\r\n","import React from 'react';\r\n\r\nconst BtnOptions = ({ btnType, textBtn, handleClick }) => {\r\n\r\n    return (\r\n        <div className=\"options_box_btn\" onClick={handleClick}>\r\n            <button className='options_btn' >\r\n                <i className={btnType} style={{ color: '#ffff', fontSize: '1.3rem' }}></i>\r\n            </button>\r\n            <p className='text_btn'>{textBtn}</p>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default BtnOptions;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { deletePost } from '../../actions/posts';\r\nimport { uiOpenUpdatePostModal } from '../../actions/ui';\r\nimport BtnOptions from '../atoms/BtnOptions';\r\n\r\n\r\nconst NavOwnerPost = ({ postId }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const clickUpdatePost = () => {\r\n        dispatch(uiOpenUpdatePostModal());\r\n    };\r\n\r\n    const clickDeletePost = () => {\r\n        dispatch(deletePost(history, postId));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <li className=\"options_item\">\r\n                <BtnOptions btnType=\"bi bi-pencil\" textBtn='Edit Post' handleClick={clickUpdatePost} />\r\n            </li>\r\n            <li className=\"options_item\">\r\n                <BtnOptions btnType=\"bi bi-trash\" textBtn='Delete Post' handleClick={clickDeletePost} />\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavOwnerPost;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { deleteUser } from \"../../actions/auth\";\r\nimport BtnOptions from \"../atoms/BtnOptions\";\r\n\r\n\r\n\r\n\r\nconst NavOwnerUser = () => {\r\n    const { user } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    const clickDeleteUser = () => {\r\n        dispatch(deleteUser(history, user.uid));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <li className=\"options_item\">\r\n                <Link to='/edit-user' >\r\n                    <BtnOptions btnType=\"bi bi-pencil\" textBtn='Edit User' />\r\n                </Link>\r\n            </li>\r\n            <li className=\"options_item\">\r\n                <BtnOptions btnType=\"bi bi-trash\" textBtn='Delete User' handleClick={clickDeleteUser} />\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavOwnerUser;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { userLogout } from '../../actions/auth';\r\nimport { uiOpenNewPostModal } from '../../actions/ui';\r\nimport { fetchNotToken } from '../../helpers/fetch';\r\nimport BtnOptions from '../atoms/BtnOptions';\r\nimport NavOwnerPost from '../molecules/NavOwnerPost';\r\nimport NavOwnerUser from '../molecules/NavOwnerUser';\r\n\r\n\r\nconst NavActions = ({ match }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.auth);\r\n\r\n    const [dataLocation, setDataLocation] = useState({\r\n        data: null,\r\n    });\r\n\r\n    const location = history.location.pathname.split('/')[1];\r\n\r\n    const createEndPoint = () => {\r\n        if (location === 'posts') {\r\n            return `${location}/${match.params.idPost}`;\r\n        } else if (location === 'users') {\r\n            return `${location}/${match.params.idUser}`;\r\n        }\r\n        return;\r\n    };\r\n    const endPoint = createEndPoint();\r\n\r\n    useEffect(() => {\r\n        if (location === 'posts' || location === 'users') {\r\n            fetchNotToken(endPoint)\r\n                .then(resp => resp.json())\r\n                .then(resp => {\r\n                    setDataLocation({\r\n                        data: resp.data\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        };\r\n    }, [location, endPoint]);\r\n\r\n    const clickNewPost = () => {\r\n        dispatch(uiOpenNewPostModal());\r\n    };\r\n    const clickLogout = () => {\r\n        dispatch(userLogout(history));\r\n    };\r\n\r\n    const activeNavPosition = () => {\r\n        console.log(location)\r\n        switch (location) {\r\n            case 'posts':\r\n                if (user.uid === dataLocation.data.author.uid) {\r\n                    return <NavOwnerPost postId={match.params.idPost} />\r\n                }\r\n                return;\r\n            case 'users':\r\n                if (user.uid === match.params.idUser) {\r\n                    return <NavOwnerUser />\r\n                }\r\n                return;\r\n            case 'edit-user':\r\n                return <NavOwnerUser />\r\n\r\n            default:\r\n                return;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className='options_bar'>\r\n            <div className=\"extends_bar\">\r\n                <ul className=\"options_list options_list_nav\">\r\n                    <li className=\"options_item\">\r\n                        <NavLink exact to={`/`} >\r\n                            <BtnOptions btnType=\"bi bi-house\" textBtn='Home' />\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"options_item\">\r\n                        <NavLink exact to={`/users/${user.uid}`} >\r\n                            <BtnOptions btnType=\"bi bi-person\" textBtn='Perfil' />\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"options_item\">\r\n                        <NavLink exact to={'/search'} >\r\n                            <BtnOptions btnType=\"bi bi-search\" textBtn='Buscar' />\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"options_list options_list_actions\">\r\n                    <li className=\"options_item\">\r\n                        <BtnOptions btnType=\"bi bi-pencil-square\" textBtn='New Post' handleClick={clickNewPost} />\r\n                    </li>\r\n                    {\r\n                        (dataLocation.data) && activeNavPosition()\r\n                    }\r\n                    {\r\n                        (location === 'edit-user') && activeNavPosition()\r\n                    }\r\n                </ul>\r\n                <ul className=\"options_list options_list_actions\">\r\n                    <li className=\"options_item\">\r\n                        <BtnOptions btnType=\"bi bi-box-arrow-left\" textBtn='Logout' handleClick={clickLogout} />\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavActions;\r\n","\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { schemaUserUpdate } from '../../helpers/formSchema';\r\nimport { capitalize } from '../../helpers/capitalize';\r\nimport { deleteUser, updateUser, updateUserImg } from '../../actions/auth';\r\n\r\n\r\n\r\nconst UserEditScreen = () => {\r\n    const { user } = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, reset, watch, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schemaUserUpdate)\r\n    });\r\n\r\n    const imageFile = watch(\"image\", []);\r\n\r\n    const [{ alt, src }, setImg] = useState({\r\n        src: user.img,\r\n        alt: 'Upload an Image'\r\n    });\r\n\r\n    // Efecto para previsualizar img user.\r\n    useEffect(() => {\r\n        if (imageFile.length) {\r\n            setImg({\r\n                src: URL.createObjectURL(imageFile[0]),\r\n                alt: imageFile[0].name\r\n            });\r\n        };\r\n    }, [imageFile]);\r\n\r\n    const initialForm = (e) => {\r\n        e.preventDefault();\r\n        reset();\r\n        setImg({\r\n            src: user.img,\r\n            alt: 'Upload an Image'\r\n        });\r\n    };\r\n\r\n    const clickDeleteUser = (e) => {\r\n        e.preventDefault();\r\n        dispatch(deleteUser(history, user.uid));\r\n    };\r\n\r\n    const saveUser = (data) => {\r\n        const formData = {\r\n            name: data.name,\r\n            surname: data.surname,\r\n            email: data.email,\r\n            facebookUrl: data.facebookUrl,\r\n            twitterUrl: data.twitterUrl,\r\n            githubUrl: data.githubUrl,\r\n            linkedinUrl: data.linkedinUrl,\r\n            newPassword: data.newPassword,\r\n            oldPassword: data.oldPassword\r\n        };\r\n        if (data.image.length > 0) {\r\n            const formDataImg = new FormData();\r\n            formDataImg.append(\"archivo\", data.image[0]);\r\n\r\n            dispatch(updateUserImg(formDataImg, history, user.uid));\r\n        }\r\n        dispatch(updateUser(formData, history, user.uid));\r\n    };\r\n\r\n    return (\r\n        <div className='edit_screen'>\r\n            <div className=\"container_form_edit\">\r\n                <form className=\"edit_user_form\" onSubmit={handleSubmit(saveUser)}>\r\n                    <div className='edit_img_field'>\r\n                        <div className=\"img_box_field\">\r\n                            <img src={src} alt={alt} />\r\n                            <label htmlFor='imageUrl' className=\"input_file_user\"><i className=\"bi bi-camera\"></i></label>\r\n                        </div>\r\n                        <input\r\n                            hidden\r\n                            type='file'\r\n                            id='imageUrl'\r\n                            defaultValue={[]}\r\n                            {...register('image')}\r\n                        />\r\n                        {errors.image && <p className=\"error\">{errors.image.message}</p>}\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'>Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                            id='name'\r\n                            defaultValue={capitalize(user.name)}\r\n                            {...register(\"name\")}\r\n                        />\r\n                        {errors.name && <p className=\"error\">{errors.name.message}</p>}\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'>Apellidos</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Last Name\"\r\n                            defaultValue={capitalize(user.surname)}\r\n                            {...register(\"surname\")}\r\n                        />\r\n                        {errors.surname && <p className=\"error\">{errors.surname.message}</p>}\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'>Email</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            defaultValue={user.email}\r\n                            {...register(\"email\")}\r\n                        />\r\n                        {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'><i className=\"bi bi-facebook\"></i>Url Facebook</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Url Facebook\"\r\n                            defaultValue={user.facebookUrl}\r\n                            {...register(\"facebookUrl\")}\r\n                        />\r\n                        {errors.facebookUrl && <p className=\"error\">{errors.facebookUrl.message}</p>}\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'><i className=\"bi bi-twitter\"></i>Url Twitter</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Url Twitter\"\r\n                            defaultValue={user.twitterUrl}\r\n                            {...register(\"twitterUrl\")}\r\n                        />\r\n                        {errors.twitterUrl && <p className=\"error\">{errors.twitterUrl.message}</p>}\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'><i className=\"bi bi-github\"></i>Url Github</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Url Github\"\r\n                            defaultValue={user.githubUrl}\r\n                            {...register(\"githubUrl\")}\r\n                        />\r\n                        {errors.githubUrl && <p className=\"error\">{errors.githubUrl.message}</p>}\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'><i className=\"bi bi-linkedin\"></i>Url Linkedin</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Url Linkedin\"\r\n                            defaultValue={user.linkedinUrl}\r\n                            {...register(\"linkedinUrl\")}\r\n                        />\r\n                        {errors.linkedinUrl && <p className=\"error\">{errors.linkedinUrl.message}</p>}\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'>Password antigua</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"old Password\"\r\n                            {...register('oldPassword')}\r\n                        />\r\n                        {errors.oldPassword && <p className=\"error\">{errors.oldPassword.message}</p>}\r\n                        <p className='alert_password'>Si no desea cambiar su contraseña deja esto en blanco</p>\r\n                    </div>\r\n                    <div className=\"edit_user_field\">\r\n                        <label className='label_field'>Password nueva</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"new password\"\r\n                            {...register('newPassword')}\r\n                        />\r\n                        {errors.newPassword && <p className=\"error\">{errors.newPassword.message}</p>}\r\n                    </div>\r\n                    <div className='btn-box'>\r\n                        <button\r\n                            className=\"button btn_call\"\r\n                            id=\"save-button\"\r\n                            type='submit'\r\n                        >Edit\r\n                        </button>\r\n                        <button\r\n                            className=\"button btn_call\"\r\n                            id=\"clear-button\"\r\n                            onClick={initialForm}\r\n                        >Reset\r\n                        </button>\r\n                        <button\r\n                            className=\"button btn_call delete\"\r\n                            id=\"delete-button\"\r\n                            onClick={clickDeleteUser}\r\n                        >Delete User\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import { Redirect, Route } from \"react-router\";\r\n\r\n\r\nconst PrivateRoute = (props) => {\r\n    const { isAuthenticated } = props\r\n\r\n    if (isAuthenticated) {\r\n        return <Route {...props} />;\r\n    }\r\n\r\n    return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport NavBarPpal from '../components/templates/NavBarPpal';\r\nimport HomeScreen from '../components/pages/HomeScreen';\r\nimport PostScreen from '../components/pages/PostScreen';\r\nimport UserScreen from '../components/pages/UserScreen';\r\nimport SearchScreen from '../components/pages/SearchScreen';\r\nimport NavActions from '../components/templates/NavActionsPosts';\r\nimport UserEditScreen from '../components/pages/UserEditScreen';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\n\r\nconst AppRouter = () => {\r\n    const { checking, user } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        //Comprobando user logged.\r\n        return (<h1>Espere...</h1>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <NavBarPpal />\r\n            <div className='screen'>\r\n                {\r\n                    (!!user.uid) &&\r\n                    <>\r\n                        <Route exact path='/posts/:idPost' component={NavActions} />\r\n                        <Route exact path='/users/:idUser' component={NavActions} />\r\n                        <Route exact path='/edit-user' component={NavActions} />\r\n                        <Route exact path='/search' component={NavActions} />\r\n                        <Route exact path='/' component={NavActions} />\r\n                    </>\r\n                }\r\n                <div className=\"screen_content\">\r\n                    <Switch>\r\n                        <Route exact path='/' component={HomeScreen} />\r\n                        <Route exact path='/posts/:idPost' component={PostScreen} />\r\n                        <Route exact path='/search' component={SearchScreen} />\r\n                        <Route exact path='/users/:idUser' component={UserScreen} />\r\n                        <PrivateRoute exact path='/edit-user' isAuthenticated={!!user.uid} component={UserEditScreen} />\r\n\r\n                        {/*  Note: 404 */}\r\n                        <Redirect to='/' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles/main.scss';\r\nimport { store } from './store/store';\r\nimport AppRouter from './router/AppRouter';\r\n\r\n\r\n\r\nconst AppMyBlog = () => {\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </ Provider>\r\n    );\r\n};\r\n\r\n\r\nexport default AppMyBlog;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppMyBlog from './AppMyBlog';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <AppMyBlog />\r\n  , document.getElementById('root')\r\n);"],"sourceRoot":""}